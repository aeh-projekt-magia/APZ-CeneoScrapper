services:

  selenium:
    image: selenium/standalone-chrome
    shm_size: 2gb
    ports:
      - '4444:4444'
      - '7900:7900'
      - '5900:5900'
    networks:
      - appnetwork
    environment:
      - VNC_NO_PASSWORD= 1
      - SE_NODE_MAX_SESSIONS=5
      - SE_NODE_SESSION_TIMEOUT=57868143
      # - SE_NODE_MAX_INSTANCES=5
      # - SE_NODE_OVERRIDE_MAX_SESSIONS=true
      # - SE_NODE_OVERRIDE_MAX_INSTANCES=true
      # - JAVA_OPTS=-XX:ActiveProcessorCount=5
  app:
    build:
      context: "."
      dockerfile: "Dockerfile-dev"
    volumes:
      - '.:/usr/src/app'
    ports:
      - '5000'
    env_file:
      - ./.env.dev
    networks:
      - appnetwork

    environment:
      - FLASK_DEBUG=1
      - FLASK_APP=app
      - FLASK_ENV=development
      - SECURITY_PASSWORD_SALT=fkslkfsdlkfnsdfnsfd
      - DATABASE_URI=postgresql://hello:hello@db:5432/database_development
      - DATABASE_TEST_URI=postgresql://hello:hello@db:5432/database_testing
    depends_on:
      db:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 1

  db:
    container_name: db
    image: postgres:15.2
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./db_init.sql:/docker-entrypoint-initdb.d/db_init.sql
    environment:
      - POSTGRES_USER=hello
      - POSTGRES_PASSWORD=hello
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    networks:
      - appnetwork
    healthcheck:
      test: /usr/bin/pg_isready -d database_development -U hello
      interval: 0.5s
      timeout: 3s
      retries: 5

#  nginx:
#    image: nginx:1.13.0
#    ports:
#      - "80:80"
#    depends_on:
#      - app
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro
#    networks:
#      - appnetwork
volumes:
  postgres_data:


networks:
  appnetwork:
    driver: bridge
