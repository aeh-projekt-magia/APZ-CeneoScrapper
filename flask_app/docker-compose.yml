services:
  app:
    build:
      context: "."
      dockerfile: "Dockerfile-dev"
    volumes:
      - '.:/usr/src/app'
    ports:
      - '5000'
    env_file:
      - ./.env.dev
    networks:
      - appnetwork

    environment:
      - FLASK_DEBUG=1
      - FLASK_APP=app
      - FLASK_ENV=development
      - EMAIL_ADDRESS=ceneowebscrapper@gmail.com
      # DELETE PASSWORD BEFORE COMMITING!
      - EMAIL_PASSWORD=...
      - SECURITY_PASSWORD_SALT=fkslkfsdlkfnsdfnsfd
      - DATABASE_URI=postgresql://hello:hello@db:5432/database_development
      - DATABASE_TEST_URI=postgresql://hello:hello@db:5432/database_testing
    depends_on:
      db:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5

  db:
    container_name: db
    image: postgres:15.2
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./db_init.sql:/docker-entrypoint-initdb.d/db_init.sql
    environment:
      - POSTGRES_USER=hello
      - POSTGRES_PASSWORD=hello
      - POSTGRES_DB=postgres
    networks:
      - appnetwork
    healthcheck:
      test: /usr/bin/pg_isready -d database_development -U hello
      interval: 0.5s
      timeout: 3s
      retries: 5

  nginx:
    image: nginx:1.13.0
    ports:
      - "80:80"
    depends_on:
      - app
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - appnetwork
volumes:
  postgres_data:

networks:
  appnetwork:
    driver: bridge

